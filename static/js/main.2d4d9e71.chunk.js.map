{"version":3,"sources":["components/Header.tsx","components/Scores.tsx","API.ts","App.tsx","index.tsx"],"names":["Header","Scores","currentScore","bestScore","className","randomNumbers","num","array","i","random","Math","floor","includes","push","difficulty","a","fetch","json","data","map","arg","id","imageUrl","card_images","image_url","key","v4","fetchCards","App","useState","cards","setCards","correctAnswers","setCorrectAnswers","setCurrentScore","setBestScore","cardsNumber","setCardsNumber","loadingCount","setLoadingCount","loading","setLoading","gameOver","setGameOver","handleCard","prev","sort","prevScore","useEffect","newCards","getCards","length","type","onClick","style","display","src","alt","onLoad","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d4d9e71.chunk.js","sourcesContent":["import '../styles/Header.css';\n\nconst Header = (): JSX.Element => {\n  return (\n    <header>\n      <h1>Yu-Gi-Oh! Memory Game</h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import '../styles/Scores.css';\n\ninterface Props {\n  currentScore: number;\n  bestScore: number;\n}\n\nconst Scores: React.FC<Props> = ({ currentScore, bestScore }): JSX.Element => {\n  return (\n    <div className=\"scoresContainer\">\n      <div className=\"scores\">\n        Current Score <br />\n        <strong>{currentScore}</strong>\n      </div>\n      <div className=\"scores\">\n        Best Score <br />\n        <strong>{bestScore}</strong>\n      </div>\n    </div>\n  );\n};\n\nexport default Scores;\n","import { v4 } from 'uuid';\n\nexport interface Card {\n  id: string;\n  imageUrl: string;\n  key: string;\n}\n\nconst MAXIMUM_CARDS = 11460;\n\nfunction randomNumbers(num: number): number[] {\n  const array: number[] = [];\n  for (let i = 0; i < num; i += 1) {\n    let random = Math.floor(Math.random() * MAXIMUM_CARDS);\n    while (array.includes(random))\n      random = Math.floor(Math.random() * MAXIMUM_CARDS);\n    array.push(random);\n  }\n  return array;\n}\n\nasync function fetchCards(difficulty: number): Promise<Card[]> {\n  const endpoint = 'https://db.ygoprodeck.com/api/v7/cardinfo.php';\n  const data = await (await fetch(endpoint)).json();\n  return randomNumbers(difficulty).map((arg) => ({\n    id: data.data[arg].id,\n    imageUrl: data.data[arg].card_images[0].image_url,\n    key: v4(),\n  }));\n}\n\nexport default fetchCards;\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Scores from './components/Scores';\nimport fetchCards, { Card } from './API';\nimport './styles/App.css';\n\nconst INITIAL_CARD_NUMBER = 5;\n\nconst App = (): JSX.Element => {\n  const [cards, setCards] = useState<Card[]>([]);\n  const [correctAnswers, setCorrectAnswers] = useState<string[]>([]);\n  const [currentScore, setCurrentScore] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n  const [cardsNumber, setCardsNumber] = useState(INITIAL_CARD_NUMBER);\n  const [loadingCount, setLoadingCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n\n  useEffect(() => {\n    setCards([]);\n    if (gameOver) return;\n\n    setLoading(true);\n    setLoadingCount(0);\n\n    async function getCards() {\n      const newCards = await fetchCards(cardsNumber);\n      setCards(newCards);\n    }\n    getCards();\n  }, [cardsNumber, gameOver]);\n\n  useEffect(() => {\n    if (currentScore > bestScore) setBestScore(currentScore);\n  }, [currentScore, bestScore]);\n\n  useEffect(() => {\n    if (correctAnswers.length === cardsNumber) {\n      setCardsNumber((prev) => prev + INITIAL_CARD_NUMBER);\n      setCorrectAnswers([]);\n    }\n  }, [correctAnswers, cardsNumber]);\n\n  useEffect(() => {\n    if (loadingCount === cardsNumber) setLoading(false);\n  }, [loadingCount, cardsNumber]);\n\n  function shuffleArray(\n    setState: React.Dispatch<React.SetStateAction<Card[]>>\n  ) {\n    setState((prev) => prev.sort(() => Math.random() - 0.5));\n  }\n\n  function reset() {\n    setCurrentScore(0);\n    setCorrectAnswers([]);\n    setGameOver(true);\n    setCardsNumber(INITIAL_CARD_NUMBER);\n  }\n\n  function handleCard(id: string) {\n    shuffleArray(setCards);\n    if (correctAnswers.includes(id)) {\n      reset();\n    } else {\n      setCorrectAnswers([...correctAnswers, id]);\n      setCurrentScore((prevScore) => prevScore + 1);\n    }\n  }\n\n  return (\n    <>\n      <Header />\n      <main>\n        <Scores currentScore={currentScore} bestScore={bestScore} />\n        <div className=\"cardContainer\">\n          {loading && <h2 className=\"load\">Loading...</h2>}\n          {gameOver && (\n            <div>\n              <h2 className=\"load\">Game Over</h2>\n              <button\n                className=\"load\"\n                type=\"button\"\n                onClick={() => setGameOver(false)}\n              >\n                Play Again\n              </button>\n            </div>\n          )}\n          {!gameOver &&\n            cards.map(({ imageUrl, key, id }) => {\n              return (\n                // eslint-disable-next-line jsx-a11y/click-events-have-key-events\n                <img\n                  style={loading ? { display: 'none' } : { display: 'block' }}\n                  key={key}\n                  src={imageUrl}\n                  alt=\"Yu-Gi-Oh Card\"\n                  onClick={() => handleCard(id)}\n                  onLoad={() => setLoadingCount((prev) => prev + 1)}\n                />\n              );\n            })}\n        </div>\n      </main>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}